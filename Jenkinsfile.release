def utils, streams, s3_bucket
node {
    checkout scm
    utils = load("utils.groovy")
    streams = load("streams.groovy")
    pod = readFile(file: "manifests/pod.yaml")

    s3_bucket = utils.get_pipeline_annotation('s3-bucket')
}

properties([
    pipelineTriggers([]),
    parameters([
      choice(name: 'STREAM',
             // list devel first so that it's the default choice
             choices: (streams.development + streams.production + streams.mechanical),
             description: 'Fedora CoreOS stream to release',
             required: true),
      string(name: 'VERSION',
             description: 'Fedora CoreOS version to release',
             defaultValue: '',
             trim: true)
    ])
])

currentBuild.description = "[${params.STREAM}] Running"

// substitute the right COSA image into the pod definition before spawning it
//pod = pod.replace("COREOS_ASSEMBLER_IMAGE", "coreos-assembler:master")
pod = pod.replace("COREOS_ASSEMBLER_IMAGE", "quay.io/slowrie/coreos-assembler:latest")

podTemplate(cloud: 'openshift', label: 'coreos-assembler', yaml: pod, defaultContainer: 'jnlp') {
    node('coreos-assembler') { container('coreos-assembler') {
        // Replicate the newly uploaded AMI to other regions. Intentionally
        // split out from the 'Upload AWS' stage to allow for tests to be added
        // at a later date before replicating said image.
        //
        // We have to re-run the coreos-meta-translator as aws-replicate
        // only modifies the meta.json
        stage('Replicate AWS AMI') {
            s3_stream_dir = "${s3_bucket}/prod/streams/${params.STREAM}"
            utils.shwrap("""
            coreos-assembler buildprep s3://slowrie-fcos/devel/streams/stephenlowrie/builds
            coreos-assembler aws-replicate --build=${params.VERSION} --regions us-east-2
            git clone https://github.com/coreos/fedora-coreos-releng-automation /var/tmp/fcos-releng
            /var/tmp/fcos-releng/coreos-meta-translator/trans.py --workdir .
            coreos-assembler buildupload --skip-builds-json s3 --acl=public-read slowrie-fcos/devel/streams/stephenlowrie/builds
            """)
        }

        /*
        stage('Publish') {
          // Run plume to publish official builds; This will handle modifying
          // object ACLs, modifying AMI image attributes,
          // and creating/modifying the releases.json metadata index
          utils.shwrap("""
          plume release --distro fcos \
              --version ${params.VERSION} \
              --channel ${params.STREAM} \
              --bucket ${s3_bucket}
          """)
        }
        */
    }}
}
